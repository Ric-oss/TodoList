{"version":3,"sources":["img.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","props","onEditing","setState","isEditing","inputItem","current","focus","onChange","e","input","target","value","onSubmit","preventDefault","state","length","alert","items","id","Date","getTime","text","isCompleted","concat","setProgress","onClick","console","log","updated","map","item","onDelete","filtered","filter","progress","Math","floor","React","createRef","all","localStorage","getItem","JSON","parse","this","setItem","stringify","className","role","style","width","aria-valuenow","aria-valuemin","aria-valuemax","color","ref","i","type","checked","htmlFor","title","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,I,MC8GAA,E,kDArGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqBRC,UAAY,WACV,EAAKC,SAAS,CAACC,WAAY,IAAM,WAC/B,EAAKC,UAAUC,QAAQC,YAxBR,EA2BnBC,SAAW,SAAAC,GACT,EAAKN,SAAS,CAACO,MAAQD,EAAEE,OAAOC,SA5Bf,EA+BnBC,SAAW,SAAAJ,GAET,GADAA,EAAEK,iBAC8B,IAA5B,EAAKC,MAAML,MAAMM,OAEnB,OADAC,MAAM,wBACC,EAET,IAAMC,EAAQ,CAACC,IAAI,IAAIC,MAAOC,UAAWC,KAAO,EAAKP,MAAML,MAAOa,aAAY,GAC9E,EAAKpB,SAAS,CAACe,MAAQ,EAAKH,MAAMG,MAAMM,OAAON,GAAQR,MAAM,KAAI,kBAAM,EAAKe,YAAY,EAAKV,MAAMG,WAtClF,EAyCnBQ,QAAU,SAAAP,GACNQ,QAAQC,IAAIT,GACZ,IAAIU,EAAU,EAAKd,MAAMG,MAAMY,KAAI,SAAAC,GAIjC,OAHGA,EAAKZ,KAAOA,IACbY,EAAKR,aAAeQ,EAAKR,aAEpBQ,KAET,EAAK5B,SAAS,CAACe,MAAQW,IAAU,kBAAM,EAAKJ,YAAY,EAAKV,MAAMG,WAjDpD,EAqDnBc,SAAW,SAACb,GACVQ,QAAQC,IAAIT,GACZ,IAAIc,EAAW,EAAKlB,MAAMG,MAAMgB,QAAO,SAAAH,GACrC,OAAOA,EAAKZ,IAAMA,KAEpB,EAAKhB,SAAS,CAACe,MAAQe,IAAW,kBAAM,EAAKR,YAAY,EAAKV,MAAMG,WA1DnD,EA8DnBO,YAAc,SAAAP,GACZ,IACIiB,EADUjB,EAAMgB,QAAO,SAAAH,GAAS,OAAOA,EAAKR,eACzBP,OAAOE,EAAMF,OACpC,EAAKb,SAAS,CAACgC,SAAWC,KAAKC,MAAiB,IAAXF,MA/DrC,EAAK9B,UAAYiC,IAAMC,YACvB,EAAKxB,MAAQ,CACXG,MAAO,GACPR,MAAO,GACPN,WAAW,EACX+B,SAAS,GAPM,E,qDAWnB,WACE,IAAIK,EAAwC,OAAlCC,aAAaC,QAAQ,SAAoBC,KAAKC,MAAMH,aAAaC,QAAQ,UAAY,GAC/FG,KAAK1C,SAAS,CAACe,MAAQsB,M,gCAIzB,WACEC,aAAaK,QAAQ,QAAQH,KAAKI,UAAUF,KAAK9B,MAAMG,U,oBAkDzD,WAAU,IAAD,OACP,OACE,8BACA,uBAAMC,GAAG,YAAYN,SAAUgC,KAAKhC,SAAUmC,UAAU,MAAxD,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,uBAAuBC,KAAK,cAAcC,MAAO,CAACC,MAAON,KAAK9B,MAAMoB,SAAW,KAAMiB,gBAAc,KAAKC,gBAAc,IAAIC,gBAAc,MAAvJ,SAA8JT,KAAK9B,MAAMoB,SAAW,QAEtL,sBAAKe,MAAO,CAACK,MAAQ,SAAUpC,GAAG,WAAWO,QAASmB,KAAK3C,UAA3D,UAAsE,mBAAG8C,UAAU,eAAnF,IAAqG,8CAArG,OACA,8BACCH,KAAK9B,MAAMX,UAAY,sBAAM4C,UAAU,mBAAhB,SAAoC,uBAAOQ,IAAKX,KAAKxC,UAAY2C,UAAW,eAAgBxC,SAAUqC,KAAKrC,SAAUI,MAAOiC,KAAK9B,MAAML,UAAkB,KAEjL,qBAAKsC,UAAU,YAAf,SACA,6BAAMH,KAAK9B,MAAMG,MAAMF,OAAS,EAChC6B,KAAK9B,MAAMG,MAAMY,KAAI,SAACC,EAAK0B,GACzB,OACE,qBAAIT,UAAU,YAAd,UACE,oBAAIA,UAAU,QAAd,SAAuBS,EAAE,IACzB,uBAAMT,UAAU,aAAhB,UACE,uBAAOU,KAAK,WAAWvC,GAAE,mBAAcY,EAAKZ,IAAMX,SAAU,kBAAM,EAAKkB,QAAQK,EAAKZ,KAAKwC,QAAS5B,EAAKR,YAAayB,UAAU,iBAC9H,uBAAOY,QAAO,mBAAc7B,EAAKZ,IAAM6B,UAAU,aACjD,mBAAGA,UAAU,OAAb,SAAsBjB,EAAKT,UAE/B,sBAAM0B,UAAU,cAAca,MAAM,SAASnC,QAAS,kBAAM,EAAKM,SAASD,EAAKZ,KAA/E,SAAoF,mBAAG6B,UAAU,2BAPlES,MAShC,mC,GA7FOK,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.172acbd5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img.4196ee78.jpg\";","import React,{Component} from 'react';\nimport './App.css';\nimport pic from './img.jpg'\n\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.inputItem = React.createRef();\n    this.state = {\n      items: [],\n      input: '',\n      isEditing: false,\n      progress:0\n    }\n  }\n\n  componentDidMount(){\n    let all = localStorage.getItem(\"items\") !== null ? JSON.parse(localStorage.getItem(\"items\")) : [];\n    this.setState({items : all})\n    \n  }\n\n  componentDidUpdate(){\n    localStorage.setItem(\"items\",JSON.stringify(this.state.items));\n    // localStorage.setItem(\"progress\",this.state.progress);\n  }\n\n  onEditing = () => {\n    this.setState({isEditing : true},()=>{\n      this.inputItem.current.focus();\n    });\n   }\n  onChange = e => { \n    this.setState({input : e.target.value})\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n    if (this.state.input.length === 0 ) {\n      alert(\"Pls enter something!\");\n      return 0;\n    }\n    const items = {id: new Date().getTime(), text : this.state.input, isCompleted:false};\n    this.setState({items : this.state.items.concat(items), input:\"\"},() => this.setProgress(this.state.items));\n   }\n\n  onClick = id => {\n      console.log(id);\n      let updated = this.state.items.map(item => {\n        if(item.id === id){\n          item.isCompleted = !item.isCompleted;\n        }\n        return item;\n      })\n      this.setState({items : updated}, () => this.setProgress(this.state.items));\n   }\n\n\n  onDelete = (id) => { \n    console.log(id);\n    let filtered = this.state.items.filter(item => {\n      return item.id != id;\n    })\n    this.setState({items : filtered}, () => this.setProgress(this.state.items));\n    // this.setProgress(this.state.items);\n  }\n\n  setProgress = items => {\n    let checked = items.filter(item => {return item.isCompleted})\n    let progress = checked.length/items.length\n    this.setState({progress : Math.floor(progress * 100)})\n  }\n\n  render() {\n    return (\n      <div>\n      <form id=\"todo-list\" onSubmit={this.onSubmit} className=\"App\">\n        <div className=\"progress\">\n          <div className=\"progress-bar bg-dark\" role=\"progressbar\" style={{width: this.state.progress + \"%\"}} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">{this.state.progress + \"%\"}</div>\n        </div> \n        <div style={{color : \"white\"}} id=\"add-todo\" onClick={this.onEditing}><i className=\"fa fa-plus\"></i> <h2> Add an Item</h2> </div>\n        <div>\n        {this.state.isEditing ? <span className=\"inputForListWrap\" ><input ref={this.inputItem}  className={\"inputForList\"} onChange={this.onChange} value={this.state.input}/></span> : \"\"}\n        </div>\n        <div className=\"container\">\n        <ol>{ this.state.items.length > 0 ?\n        this.state.items.map((item,i) => {\n          return(\n            <li className=\"todo-wrap\" key={i}>\n              <h4 className=\"index\">{i+1}</h4>\n              <span className=\"todo__main\">\n                <input type=\"checkbox\" id={`checkme__${item.id}`} onChange={() => this.onClick(item.id)} checked={item.isCompleted} className=\"realcheckbox\"/>\n                <label htmlFor={`checkme__${item.id}`} className=\"checkbox\"></label>\n                <p className=\"todo\" >{item.text}</p>\n              </span>\n            <span className=\"delete-item\" title=\"remove\" onClick={() => this.onDelete(item.id)}><i className=\"fa fa-times-circle\"></i></span> \n          </li>)\n      }) : <p></p>\n        }</ol>\n       </div>\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}